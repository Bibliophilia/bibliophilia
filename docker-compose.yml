version: '3'
services:
  postgres:
    image: postgres:13.3
    container_name: postgres
    environment:
      POSTGRES_DB: bibliophiliadb
      POSTGRES_USER: bibliophilia
      POSTGRES_PASSWORD: bibliophilia
    volumes:
      - db_volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - bibliopilia_network


  elasticsearch:
    image: elasticsearch:${STACK_VERSION}
    container_name: elasticsearch
    ports:
      - "${ES_PORT}:9200"
    environment:
      - node.name=elasticsearch
      - cluster.name=${CLUSTER_NAME}
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
    env_file:
      - .env
    networks:
      - bibliopilia_network

  kibana:
    image: kibana:${STACK_VERSION}
    container_name: kibana
    depends_on:
      - elasticsearch
    ports:
      - "${KIBANA_PORT}:5601"
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
    env_file:
      - .env
    networks:
      - bibliopilia_network

  backend:
    build:
      context: .
    container_name: backend
    restart: always
    volumes:
      - images_volume:/app/public/images
      - files_volume:/app/private/files
    depends_on:
      - postgres
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
    ports:
      - "8000:8000"
    networks:
      - bibliopilia_network

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    volumes:
      - images_volume:/app/public/images
    depends_on:
      - backend
    ports:
      - "3000:3000"
    networks:
      - bibliopilia_network

networks:
  bibliopilia_network:

volumes:
  db_volume:
  images_volume:
  files_volume: